import sys
import numpy as np
import pandas as pd
from numpy import array


pairs = {}

files1 = ['ivy', 'lucene', 'poi', 'synapse', 'velocity', 'camel', 'jedit', 'log4j', 'xalan', 'xerces']
files2 = ['ivy1', 'lucene1', 'lucene2', 'poi1', 'poi2', 'synapse1', 'synapse2', 'camel1', 'camel2', 'xerces1', 'jedit1', 'jedit2', 'log4j1', 'xalan1']

for file in list`ls results/2-class/{sys.argv[1]}`:
    filename = f'./results/2-class/{sys.argv[1]}/{file}'
    
    treatments = list`grep "^Running" {filename}`.map(lambda x: eval(x.split("Running")[1]))[::-1]
    regex = "^[[{]"
    results = list`grep "{regex}" {filename}`.map(lambda x: eval(x))
    results = [np.array(x).squeeze() if 'list' in x.__class__.__name__ else np.array(x['accuracy']).squeeze() for x in results]

    for i, (t, r) in enumerate(zip(treatments, results)):
        (dodge, wfo, smote, ultrasample, smooth) = t
        t = {'dodge': dodge, 'wfo': wfo, 'smote': smote, 'ultrasample': ultrasample, 'smooth': smooth}

        s = frozenset(t.items())
        if s not in pairs:
            pairs[s] = []
        pairs[s].append(r)

df = pd.DataFrame(columns=['dodge', 'wfo', 'smote', 'ultrasample', 'smooth', 'accuracy'])
all_perfs = []
for s, r in pairs.items():
    t = dict(s)
    all_perfs.extend(r)
    perf = np.median(r).squeeze()

    t = {**t, 'accuracy': perf}
    df = df.append(t, ignore_index=True)

print("Cohen's d: ", 0.35 * np.std(all_perfs))
print(df)
